# 	TagLib for Linux
#
#	author: "Finnian Reilly"
#	copyright: "Copyright (c) 2001-2010 Finnian Reilly"
#	contact: "finnian at eiffel hyphen loop dot com"
#	license: "MIT license (See: en.wikipedia.org/wiki/MIT_License)"
#	date: "7 Jan 2010"
#	revision: "0.1"

import os, sys, platform

from os import path

from eiffel_loop import platform

from eiffel_loop.scons import c_library
from eiffel_loop.scons import util

from eiffel_loop.eiffel import ise_environ

from eiffel_loop.distutils import file_util
from eiffel_loop.package import TAR_GZ_SOFTWARE_PACKAGE

def build_taglib (target, source, env):
	# Workaround for bug in taglib-1.11.1 where header file is misnamed: `taglib_config.h.cmake'

	c_library.build (target, source, env)
	if len (source) > 0:
		table = file_util.read_table (str (source [0]))
		pkg = TAR_GZ_SOFTWARE_PACKAGE (table ['url'], path.expandvars (table ['c_dev']), table ['extracted'])
		cmake_path = path.join (pkg.unpacked_dir, table ['include'], 'taglib_config.h.cmake')
		if path.exists (cmake_path):
			file_util.move_file (cmake_path, cmake_path [:-6])

global ise
ise = ise_environ.shared

#Import ('env')

env = Environment (
	ENV = os.environ, # this is needed to reproduce the environment for external commands like LIB
	EIFFEL_LOOP = os.environ ['EIFFEL_LOOP'], ISE_PLATFORM = ise.platform
)


if platform.is_unix ():
	build_dir =  ise.spec_build_dir ()
	VariantDir (build_dir, 'source', duplicate=0)

	env ['BUILDERS']['C_library'] = Builder (
		action = build_taglib, suffix='.a', src_suffix='.getlib', emitter = util.complete_targets
	)
	lib = env.C_library (path.join (build_dir, 'libtag.a'), File (path.join (build_dir, 'taglib.getlib')))
	
	env.NoClean (lib)
#	Return (['downloaded_DLLs', 'dll_import_libs'])
	






