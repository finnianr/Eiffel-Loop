pyxis-doc:
	version = 1.0; encoding = "ISO-8859-1"

# Pyxis is data format inspired by the Python programming language and designed to be a more
# readable supplement/substitute for XML configuration files.

system:
	configuration_ns = "1-16-0"; name = el_benchmark; uuid = "2F16B114-67AF-11EB-94F8-A7BEE388CA6C"
	description:
		"""
			Eiffel-Loop Code Performance Benchmarks

			See doc/benchmark.txt for details
		"""
	# classic means C code as an intermediate language
	target: 
		name = classic
		root:
			class = APPLICATION_ROOT; feature = make
		version:
			major = 2; minor = 0; release = 0; build = 127
			company = "Eiffel-Loop"; product = "test"
			copyright = "Finnian Reilly"

		option:
			syntax = standard; full_class_checking = false; void_safety = none
			assertions:
				precondition = true; postcondition = true; check = true

		settings:
			address_expression = false; array_optimization = false
			check_vape = true; console_application = true
			concurrency = thread; check_for_void_target = false
			dead_code_removal = true; dynamic_runtime = false
			exception_trace = true
			inlining = true; inlining_size = 15
			line_generation = false

		precompile:
			precompile = "$ISE_PRECOMP/EL/console-application.ecf"

		# ISE libraries
		libraries:
			location = "$ISE_LIBRARY/library"
			time = "time/time.ecf"
			ise_base; location = "base/base.ecf"
			option:
				assertions:
					precondition = true; postcondition = true; check = true; invariant = true

		# Eiffel Loop libraries
		writeable_libraries:
			location = "$EIFFEL_LOOP/library"
			EL_app_manage = "app-manage.ecf"
			EL_c_api = "C-language-interface.ecf"
			EL_doc_scan = "document-scan.ecf"
			EL_evolicity = "evolicity.ecf"
			EL_fast_cgi = "fast-cgi.ecf"
			EL_logging = "logging.ecf"
			EL_os_command = "os-command.ecf"
			EL_search_engine = "search-engine.ecf"
			EL_testing = "testing.ecf"
			EL_text_formats = "text-formats.ecf"
			EL_vtd_xml = "vtd-xml.ecf"
			EL_xml_scan = "xml-scan.ecf"

			EL_base = "base/base.ecf"
			option:
				assertions:
					precondition = true; postcondition = true; check = true
		# Testing
		cluster_tree:
			test_common = "$EIFFEL_LOOP/test/source/common"

		# clusters in common with other project
		cluster:
			name = rhythmbox; location = "$EIFFEL_LOOP/example/manage-mp3/source/rhythmbox/constants/common"
			
		# Source
		cluster_tree:
			project = source
			description:
				"""
					Performance Benchmarks

					**Sub-applications**
			
					* [$source ZSTRING_BENCHMARK_APP] performance tests the class [$source EL_ZSTRING]
					* [$source BENCHMARK_APP] compares performance of related routines with [$source EL_BENCHMARK_COMPARISON].
					The benchmarks are run from a menu shell.

					See doc/benchmark.txt for details
				"""


