pyxis-doc:
	version = 1.0; encoding = "ISO-8859-1"

# Pyxis is data format inspired by the Python programming language and designed to be a more
# readable supplement/substitute for XML configuration files.

system:
	configuration_ns = "1-16-0"
	name = el_test; uuid = "A325754F-7BEB-44B6-937C-CC7EBDDA764F"
	description:
		"""
			Eiffel-Loop Library Tests
		"""
	# classic means C code as an intermediate language
	target: 
		name = classic
		root:
			class = APPLICATION_ROOT; feature = make
		version:
			major = 1; minor = 0; release = 7; build = 377
			company = "Eiffel-Loop"; product = "test"
			copyright = "Finnian Reilly"

		variable:
			name = build_info_dir; value = "source/root"

		option:
			syntax = standard; full_class_checking = false; void_safety = none
			assertions:
				precondition = true; postcondition = true; check = true

		setting:
			name = address_expression; value = false

		setting:
			name = array_optimization; value = false

		setting:
			name = check_vape; value = true

		setting:
			name = console_application; value = true

		setting:
			name = dead_code_removal; value = true

		setting:
			name = dynamic_runtime; value = false

		setting:
			name = exception_trace; value = true

		setting:
			name = line_generation; value = false

		setting:
			name = inlining; value = true

		setting:
			name = inlining_size; value = 2

		setting:
			name = concurrency; value = thread

		precompile:
			name = precompile; location = "$ISE_PRECOMP/EL/console-application.ecf"

		library:
			name = base; location = "$ISE_LIBRARY/library/base/base.ecf"
			option:
				assertions:
					precondition = true; postcondition = true; check = true

		library:
			name = base_ext; location = "$ISE_LIBRARY/library/base_extension/base_extension.ecf"

		library:
			name = encoding; location = "$ISE_EIFFEL/library/encoding/encoding.ecf"

		library:
			name = thread; location = "$ISE_LIBRARY/library/thread/thread.ecf"

		library:
			name = time; location = "$ISE_LIBRARY/library/time/time.ecf"

		library:
			name = net; location = "$ISE_LIBRARY/library/net/net.ecf"

		library:
			name = testing; location = "$ISE_LIBRARY/library/testing/testing.ecf"

		# Encryption
		variable:
			name = eapml_limb_type; value = natural_32

		library:
			name = arbitrary_precision_math; location = "$ISE_LIBRARY/contrib/library/math/eapml/eapml.ecf"

		library:
			name = encryption_base; location = "$ISE_LIBRARY/contrib/library/text/encryption/eel/eel.ecf"

		# Gobo
		library:
			name = gobo_base; location = "$EIFFEL_LOOP/library/gobo-base.ecf"


		# Eiffel Loop libraries
		library:
			name = EL_amazon_ia; location = "$EIFFEL_LOOP/library/amazon-instant-access.ecf"
			readonly = false
		library:
			name = EL_app_manage; location = "$EIFFEL_LOOP/library/app-manage.ecf"
			readonly = false

		library:
			name = EL_base; location = "$EIFFEL_LOOP/library/base/base.ecf"; readonly = false
			option:
				assertions:
					precondition = true; postcondition = true; check = true
			#; use_application_options = true

		library:
			name = EL_c_api; location = "$EIFFEL_LOOP/library/C-language-interface.ecf"; readonly = false

		library:
			name = EL_compression; location = "$EIFFEL_LOOP/library/compression.ecf"
			readonly = false

		library:
			name = EL_eco_db; readonly = false
			location = "$EIFFEL_LOOP/library/Eco-DB.ecf"

		library:
			name = EL_encryption; location = "$EIFFEL_LOOP/library/encryption.ecf"
			readonly = false

		library:
			name = EL_evolicity; readonly = false
			location = "$EIFFEL_LOOP/library/evolicity.ecf"

		library:
			name = EL_fast_cgi; location = "$EIFFEL_LOOP/library/fast-cgi.ecf"
			readonly = false

		library:
			name = EL_ftp; readonly = false
			location = "$EIFFEL_LOOP/library/ftp.ecf"

		library:
			name = EL_http_client; readonly = false
			location = "$EIFFEL_LOOP/library/http-client.ecf"

		library:
			name = EL_i18n; readonly = false
			location = "$EIFFEL_LOOP/library/i18n.ecf"

		library:
			name = EL_id3_tags; location = "$EIFFEL_LOOP/library/ID3-tags.ecf"
			readonly = false

		library:
			name = EL_image_utils; readonly = false
			location="$EIFFEL_LOOP/library/image-utils.ecf"

		library:
			name = EL_logging; readonly = false
			location = "$EIFFEL_LOOP/library/logging.ecf"

		library:
			name = EL_markup_docs; readonly = false
			location = "$EIFFEL_LOOP/library/markup-docs.ecf"

		library:
			name = EL_network; readonly = false
			location = "$EIFFEL_LOOP/library/network.ecf"

		library:
			name = EL_os_command; readonly = false
			location = "$EIFFEL_LOOP/library/os-command.ecf"

		library:
			name = EL_paypal_SBM; readonly = false
			location = "$EIFFEL_LOOP/library/paypal-SBM.ecf"

		library:
			name = EL_search_engine; readonly = false
			location = "$EIFFEL_LOOP/library/search-engine.ecf"

		library:
			name = EL_taglib; location = "$EIFFEL_LOOP/library/TagLib.ecf"
			readonly = false

		library:
			name = EL_text_formats; readonly = false
			location = "$EIFFEL_LOOP/library/text-formats.ecf"

		library:
			name = EL_testing; readonly = false
			location = "$EIFFEL_LOOP/library/testing.ecf"

		library:
			name = EL_text_process; readonly = false
			location = "$EIFFEL_LOOP/library/text-process.ecf"

		library:
			name = EL_thread; readonly = false
			location = "$EIFFEL_LOOP/library/thread.ecf"

		library:
			name = EL_wav_audio; readonly = false
			location = "$EIFFEL_LOOP/library/wav-audio.ecf"
			condition:
				platform:
					value = windows

		library:
			name = EL_wel_x_audio; readonly = false
			location = "$EIFFEL_LOOP/library/wel-x-audio.ecf"
			condition:
				platform:
					value = windows

		library:
			name = EL_vtd_xml; location = "$EIFFEL_LOOP/library/vtd-xml.ecf"
			readonly = false

		library:
			name = EL_xdoc_scanning; location = "$EIFFEL_LOOP/library/xdoc-scanning.ecf"
			readonly = false

		cluster:
			name = root; location = "source/root"; recursive = true
			description:
				"""
					Eiffel-Loop Dev Tests
					
					Sub-applications for testing the ''Eiffel-Loop'' libraries

					See doc/test.root.txt for details
				"""
			file_rule:
				exclude:
					"/spec/unix$"
				condition:
					platform:
						value = windows

			file_rule:
				exclude:
					"/spec/windows$"
				condition:
					platform:
						value = unix

		# This works but no idea how to set it in Project settings		
		#tests:
		#	name = autotests; location = "source/autotests"; recursive = true
	
		# Source clusters
		cluster:
			name = test_set; location = "source/test-set"; recursive = true
			description:
				"""
					Eiffel-Loop Test Sets
				
					Sub-application [$source AUTOTEST_DEVELOPMENT_APP] allows selected test sets to be run via normal program execution
					and also to test them as finalized executable.

					Hierarchy of classes inheriting from
					[https://www.eiffel.org/doc/eiffelstudio/Testing-_Background_and_basics EQA_TEST_SET]

					See doc/test.test_sets.txt for details
				"""

		cluster:
			name = benchmark; location = "source/benchmark"; recursive = true
			description:
				"""
					Eiffel-Loop Benchmark Testing

					**Sub-applications**
					
					* [$source ZSTRING_BENCHMARK_APP] does performance testing of class [$source EL_ZSTRING]
					* [$source BENCHMARK_APP] compares performance of related routines with [$source EL_BENCHMARK_COMPARISON].
					The benchmarks are run from a menu shell.

					See doc/test.benchmark.txt for details
				"""
		cluster:
			name = amazon_ia; location = "source/amazon-ia"; recursive = true
			description:
				"""
					Test amazon-instant-access.ecf
					
					Tests for Eiffel interface to Amazon Instant Access API.
					See class [$source AMAZON_INSTANT_ACCESS_TEST_APP]
				"""

		cluster:
			name = base_test; location = "source/base"; recursive = true
			description:
				"""
					Test Eiffel-Loop base.ecf
					
					See class [$source BASE_AUTOTEST_APP]
				"""

		cluster:
			name = markup_docs; location = "source/markup-docs"; recursive = true
			description:
				"""
					Test markup-docs.ecf
					
					* Test subject line decoding for Thunderbird Email Export with [$source THUNDERBIRD_TEST_APP]
					* Regression test reading of Open Office Spreadsheet with [$source OPEN_OFFICE_TEST_APP]
				"""
		cluster:
			name = os_command; location = "source/os-command"; recursive = true
			description:
				"""
					Test os-command.ecf
					
					See class [$source OS_COMMAND_AUTOTEST_APP]
				"""

		cluster:
			name = paypal_SBM; location = "source/paypal-SBM"; recursive = true
			description:
				"""
					Test paypal-SBM.ecf
					
					Tests for Eiffel interface to PayPal Payments Standard Button Manager API.
					See class [$source PAYPAL_STANDARD_BUTTON_MANAGER_TEST_APP]
				"""
		cluster:
			name = xdoc_scanning; location = "source/xdoc-scanning"; recursive = true
			description:
				"""
					Test xdoc-scanning.ecf

					* [$source BEX_XML_TO_EIFFEL_OBJECT_BUILDER_TEST_APP]
					* [$source DECLARATIVE_XPATH_PROCESSING_TEST_APP]
					* [$source OBJECT_BUILDER_TEST_APP]
					* [$source RECURSIVE_XML_TO_EIFFEL_OBJECT_BUILDER_TEST_APP]
				"""
		cluster:
			name = vtd_xml; location = "source/vtd-xml"; recursive = true
			description:
				"""
					Test vtd-xml.ecf
					
					Tests for Eiffel interface VTD-XML C API
					See class [$source TEST_VTD_XML_APP]
				"""


