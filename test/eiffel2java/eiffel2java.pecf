pyxis-doc:
	version = 1.0; encoding = "ISO-8859-1"

# Pyxis is data format inspired by the Python programming language and designed to be a more
# readable supplement/substitute for XML configuration files.

# Pyxis as an acronym stands for: Pythonic XML ideal source.
# It is also a Latin transliteration of a Greek word for a type of pottery used by women to hold 
# cosmetics, trinkets or jewellery. 

# The following is project configuration data for an Eiffel programming language project
# compiled with the EiffelStudio IDE

# This project contains a parser for the Pyxis format and a Pyxis to XML convertion utility

system:
	configuration_ns = "1-16-0"; uuid = "20FD9834-3FC9-4349-AD78-73ABA2C735D4"
	name = el_eiffel2java
	description:
		"""
			eiffel2java.ecf (Eiffel-Loop)

			Test sets for the [./library/eiffel2java.html Eiffel-Loop Java interface library].
			This library provides a useful layer of abstraction over the Eiffel Software JNI interface.
		"""
	target: 
		name = classic
		root:
			class = APPLICATION_ROOT; feature = make
		version:
			major = 1; minor = 0; release = 0; build = 56
			company = "Eiffel-Loop"; product = "eiffel2java"
			copyright = "Finnian Reilly"

		option:
			syntax = standard; full_class_checking = false; void_safety = none
			trace = false; debug = false; warning = true
			debugging:
				jni = enabled
			assertions:
				precondition = true; postcondition = true; check = true; invariant = true

		settings:
			address_expression = false; array_optimization = false
			check_vape = true; console_application = true
			dead_code_removal = true; dynamic_runtime = false
			exception_trace = false
			inlining = false; line_generation = false
			concurrency = thread

		precompile:
			precompile = "$ISE_PRECOMP/EL/console-application.ecf"

		# Invokes scons script to download Java rasterizer jar files
		external_object:
			location = "$(EIFFEL_LOOP)/contrib/Java/batik-1.6.1/batik-rasterizer.jar"
			condition:
				shared = true

		# Invokes scons script to download Java Velocity jar files
		external_object:
			location = "$(EIFFEL_LOOP)/contrib/Java/velocity-1.7/velocity-1.7-dep.jar"
			condition:
				shared = true

		# ISE libraries
		library:
			base = "$ISE_LIBRARY/library/base/base.ecf"

		# Eiffel Loop overrides
		library:
			eiffel2java = "$EIFFEL_LOOP/library/override/ES-eiffel2java.ecf"

		# Eiffel Loop
		writeable_libraries:
			location = "$EIFFEL_LOOP/library"
			EL_base = "base/base.ecf"
			EL_app_manage = "app-manage.ecf"
			EL_eiffel2java = "eiffel2java.ecf"
			option:
				assertions:
					precondition = true; postcondition = true; check = true
				debugging:
					jni = enabled

			EL_evolicity = "evolicity.ecf"
			EL_logging = "logging.ecf"
			EL_os_command = "os-command.ecf"
			EL_testing = "testing.ecf"
			option:
				assertions:
					precondition = true; postcondition = true; check = true

		# Clusters
		cluster_tree:
			project = source
			# stop invariant being triggured on creation of following
			class_option:
				class = JAVA_TEST_SET
				assertions:
					precondition = true; postcondition = true; check = true
			class_option:
				class = VELOCITY_TEST_SET
				assertions:
					precondition = true; postcondition = true; check = true
			class_option:
				class = SVG_TO_PNG_TEST_SET
				assertions:
					precondition = true; postcondition = true; check = true

		cluster_tree:
			test_common = "$EIFFEL_LOOP/test/source/common/support"

