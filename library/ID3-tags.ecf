<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
	Pyxis as an acronym stands for: Pythonic XML ideal source.
	It is also a Latin transliteration of a Greek word for a type of pottery used by women to hold
	cosmetics, trinkets or jewellery.
-->
<system name = "EL_id3_tag" library_target = "EL_id3_tag" uuid = "229B4FAE-09AA-11DF-8771-E7444F3B4D30" xmlns = "http://www.eiffel.com/developers/xml/configuration-1-16-0" xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation = "http://www.eiffel.com/developers/xml/configuration-1-16-0 http://www.eiffel.com/developers/xml/configuration-1-16-0.xsd">
	<description>
ID3 Tagging for MP3

**Description**

Classes for reading and writing ID3 tags to MP3 files using a common interface to the
C libraries `libid3tag (C)&apos; and `id3lib (C++)&apos;. The former C library is used for ID3 version 2.4 tags
and the latter for earlier versions from 2.0 to 2.3.

**Status Obsolete**

Due to numerous problems with the id3lib C++ library this project has been abandoned in
favor of the [./library/TagLib.html TagLib library] which is still maintained and supports
many more meta-data types besides ID3.
	</description>
	<target name = "EL_id3_tag">
		<option syntax = "standard" full_class_checking = "false" void_safety = "none" trace = "false" debug = "false" warning = "true">
			<assertions precondition = "true" postcondition = "true" check = "true" invariant = "true"/>
		</option>
		<root all_classes = "true"/>
		<!--
			libid3 and libid3tag includes
			For Windows: libid3 and libid3tag externals
		-->
		<external_include location = "$(EXT_CPP_ID3LIB)\include">
			<condition>
				<platform value = "windows"/>
			</condition>
		</external_include>
		<external_cflag value = "-DID3LIB_LINKOPTION=1 -DWIN32 -EHsc">
			<condition>
				<platform value = "windows"/>
			</condition>
		</external_cflag>
		<external_object location = "$(EL_CPP_ID3LIB)/spec/$(ISE_PLATFORM)/id3.lib">
			<condition>
				<platform value = "windows"/>
			</condition>
		</external_object>
		<external_include location = "$(EXT_C_LIBID3TAG)">
			<condition>
				<platform value = "windows"/>
			</condition>
		</external_include>
		<external_object location = "$(EL_C_LIBID3TAG)/spec/$(ISE_PLATFORM)/id3tag.lib">
			<condition>
				<platform value = "windows"/>
			</condition>
		</external_object>
		<!--For Unix: libid3 and libid3tag externals-->
		<external_include location = "$(EXT_CPP_ID3LIB)/include">
			<condition>
				<platform value = "unix"/>
			</condition>
		</external_include>
		<external_object location = "-L$(EL_CPP_ID3LIB)/spec/$(ISE_PLATFORM) -lid3">
			<condition>
				<platform value = "unix"/>
			</condition>
		</external_object>
		<external_include location = "$(EXT_C_LIBID3TAG)">
			<condition>
				<platform value = "unix"/>
			</condition>
		</external_include>
		<external_object location = "-L$(EL_C_LIBID3TAG)/spec/$(ISE_PLATFORM) -lid3tag">
			<condition>
				<platform value = "unix"/>
			</condition>
			<description>
WARNING: subtle bug
Only link against a static library. If linked against a shared object library
GetRawText() routine will return null for utf8 strings.
			</description>
		</external_object>
		<external_object location = "-L$(ISE_LIBRARY)/C_library/zlib -lz">
			<condition>
				<platform value = "unix"/>
			</condition>
		</external_object>
		<!--ISE libraries-->
		<library name = "base" location = "$ISE_LIBRARY/library/base/base.ecf"/>
		<library name = "time" location = "$ISE_LIBRARY/library/time/time.ecf"/>
		<library name = "ise_zlib" location = "$ISE_LIBRARY/C_library/zlib/clibs_zlib.ecf">
			<condition>
				<platform value = "windows"/>
			</condition>
		</library>
		<!--Eiffel Loop-->
		<library name = "EL_base" location = "base/base.ecf"/>
		<library name = "EL_c_api" location = "C-language-interface.ecf"/>
		<!--Source code-->
		<cluster name = "id3_tag" location = "multimedia/ID3/id3_tag" recursive = "true"/>
	</target>
</system>
