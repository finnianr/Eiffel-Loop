<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
	Pyxis as an acronym stands for: Pythonic XML ideal source.
	It is also a Latin transliteration of a Greek word for a type of pottery used by women to hold
	cosmetics, trinkets or jewellery.
-->
<system name = "EL_taglib" library_target = "EL_taglib" uuid = "243285C8-F255-11E9-AF8E-E3A3935D48CC" xmlns = "http://www.eiffel.com/developers/xml/configuration-1-16-0" xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation = "http://www.eiffel.com/developers/xml/configuration-1-16-0 http://www.eiffel.com/developers/xml/configuration-1-16-0.xsd">
	<description>
TagLib Audio Meta-Data Library

Eiffel binding for the ID3 v1 and v2 tag manager from the [https://taglib.org/ TagLib C++ library].

TagLib can read and edit the meta-data of many popular audio formats. Currently it supports both ID3v1
and ID3v2 for MP3 files, Ogg Vorbis comments and ID3 tags and Vorbis comments in FLAC, MPC, Speex, WavPack,
TrueAudio, WAV, AIFF, MP4 and ASF files.

**Test Set**

[./test/test.taglib.html test/test.ecf#taglib]

**Future Development**

Support for `m4a&apos; and `flac&apos; meta-data.

**Credits**

Special thanks to [https://github.com/scotchi Scott Wheeler], the original author of the TagLib library,
for his kind assistance and and support in creating this Eiffel binding.
	</description>
	<target name = "EL_taglib">
		<option syntax = "standard" full_class_checking = "false" void_safety = "none" trace = "false" debug = "false" warning = "true">
			<assertions precondition = "true" postcondition = "true" check = "true" invariant = "true"/>
		</option>
		<root all_classes = "true"/>
		<external_include location = "$(EXT_CPP_TAGLIB)\taglib">
			<condition>
				<platform value = "windows"/>
			</condition>
		</external_include>
		<external_include location = "$(EXT_CPP_TAGLIB)\taglib\mpeg\id3v2">
			<condition>
				<platform value = "windows"/>
			</condition>
		</external_include>
		<external_include location = "$(EXT_CPP_TAGLIB)\taglib\toolkit">
			<condition>
				<platform value = "windows"/>
			</condition>
		</external_include>
		<external_object location = "$(EL_CPP_TAGLIB)\taglib\spec\$(ISE_PLATFORM)\tag.lib">
			<condition>
				<platform value = "windows"/>
			</condition>
		</external_object>
		<!--For Unix-->
		<external_include location = "$(EXT_CPP_TAGLIB)/taglib">
			<condition>
				<platform value = "unix"/>
			</condition>
		</external_include>
		<external_include location = "$(EXT_CPP_TAGLIB)/taglib/mpeg/id3v2">
			<condition>
				<platform value = "unix"/>
			</condition>
		</external_include>
		<external_include location = "$(EXT_CPP_TAGLIB)/taglib/toolkit">
			<condition>
				<platform value = "unix"/>
			</condition>
		</external_include>
		<external_object location = "-L$(EL_CPP_TAGLIB)/spec/$(ISE_PLATFORM) -ltag">
			<condition>
				<platform value = "unix"/>
			</condition>
		</external_object>
		<external_object location = "-L$(ISE_LIBRARY)/C_library/zlib -lz">
			<condition>
				<platform value = "unix"/>
			</condition>
		</external_object>
		<!--ISE libraries-->
		<library name = "base" location = "$ISE_LIBRARY/library/base/base.ecf"/>
		<library name = "time" location = "$ISE_LIBRARY/library/time/time.ecf"/>
		<library name = "zlib" location = "$ISE_LIBRARY/C_library/zlib/clibs_zlib.ecf">
			<condition>
				<platform value = "windows"/>
			</condition>
		</library>
		<!--Eiffel-Loop libraries-->
		<library name = "EL_base" location = "base/base.ecf"/>
		<library name = "EL_c_api" location = "C-language-interface.ecf"/>
		<!--Source code-->
		<cluster name = "taglib" location = "multimedia/ID3/taglib" recursive = "true">
			<file_rule>
				<exclude>/imp_mswin$</exclude>
				<condition>
					<platform value = "unix"/>
				</condition>
			</file_rule>
			<file_rule>
				<exclude>/imp_unix$</exclude>
				<condition>
					<platform value = "windows"/>
				</condition>
			</file_rule>
		</cluster>
	</target>
</system>
