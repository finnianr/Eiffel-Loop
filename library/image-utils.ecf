<?xml version="1.0" encoding="ISO-8859-1"?>
<!---->
<system name = "EL_image_utils" library_target = "EL_image_utils" uuid = "229b6cc8-09aa-11df-87a9-ffc4e5fcb1e7" xmlns = "http://www.eiffel.com/developers/xml/configuration-1-16-0" xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation = "http://www.eiffel.com/developers/xml/configuration-1-16-0 http://www.eiffel.com/developers/xml/configuration-1-16-0.xsd">
	<description>
Image Utilities

Image utilities providing:

1. SVG to PNG conversion using C library [http://librsvg.sourceforge.net/ librsvg]
2. Miscellaneous routines from the [https://cairographics.org/ Cairo graphics C library]
	</description>
	<target name = "EL_image_utils">
		<root all_classes = "true"/>
		<option syntax = "standard" full_class_checking = "false" void_safety = "none" trace = "false" debug = "false" warning = "true">
			<assertions precondition = "true" postcondition = "true" check = "true" invariant = "true"/>
		</option>
		<!--Common includes-->
		<external_include location = "$(EL_C_LIB)/include"/>
		<external_include location = "$(EL_C_LIB)/image-utils/source"/>
		<external_include location = "$(EL_C_CAIRO)/include/cairo">
			<condition>
				<platform value = "windows"/>
			</condition>
		</external_include>
		<external_include location = "$(EL_C_CAIRO)/include/librsvg-2.0/librsvg">
			<condition>
				<platform value = "windows"/>
			</condition>
		</external_include>
		<external_include location = "$(EL_C_CAIRO)/include/glib-2.0">
			<condition>
				<platform value = "windows"/>
			</condition>
		</external_include>
		<external_include location = "$(EL_C_CAIRO)/lib/glib-2.0/include">
			<condition>
				<platform value = "windows"/>
			</condition>
		</external_include>
		<!--Unix includes-->
		<external_include location = "/usr/include/cairo">
			<condition>
				<platform value = "unix"/>
			</condition>
		</external_include>
		<external_include location = "/usr/include/librsvg-2.0/librsvg">
			<condition>
				<platform value = "unix"/>
			</condition>
		</external_include>
		<external_include location = "/usr/include/glib-2.0">
			<condition>
				<platform value = "unix"/>
			</condition>
		</external_include>
		<!--Needs to be a way to select the 32 bit version but how?-->
		<external_include location = "/usr/lib/x86_64-linux-gnu/glib-2.0/include">
			<condition>
				<platform value = "unix"/>
			</condition>
		</external_include>
		<!--
			For Windows
			The following objects are excluded from being linked because they are intended for dynamic linking at runtime.
			They are included to trigger SCons build scripts.
		-->
		<external_object location = "$(EL_C_LIB)/image-utils/spec/$(ISE_PLATFORM)/elimageutils.dll">
			<description>Windows implementation of C interface &lt;image-utils.h&gt;</description>
			<condition>
				<custom name = "shared" value = "true"/>
				<platform value = "windows"/>
				<custom name = "copy" value = "$location"/>
			</condition>
		</external_object>
		<external_object location = "$(EL_C_CAIRO)/spec/$(ISE_PLATFORM)/libcairo-2.dll">
			<description>Cairo DLL&apos;s for Windows</description>
			<condition>
				<custom name = "shared" value = "true"/>
				<platform value = "windows"/>
				<custom name = "copy" value = "$EL_C_CAIRO/spec/$ISE_PLATFORM/*.dll"/>
			</condition>
		</external_object>
		<!--For Unix-->
		<external_object location = "$(EL_C_LIB)/image-utils/spec/$(ISE_PLATFORM)/libelimageutils.so">
			<description>Unix implementation of C interface &lt;image-utils.h&gt;</description>
			<condition>
				<custom name = "shared" value = "true"/>
				<platform value = "unix"/>
				<custom name = "copy" value = "$location"/>
			</condition>
		</external_object>
		<library name = "base" location = "$ISE_LIBRARY/library/base/base.ecf"/>
		<!--Eiffel-Loop-->
		<library name = "EL_base" location = "base/base.ecf"/>
		<library name = "EL_c_api" location = "C-language-interface.ecf"/>
		<library name = "EL_os_command" location = "os-command.ecf"/>
		<library name = "EL_pyxis_scan" location = "pyxis-scan.ecf"/>
		<!--Source code-->
		<cluster name = "image_utils" location = "graphic/image/utils" recursive = "true">
			<file_rule>
				<exclude>/imp_mswin$</exclude>
				<condition>
					<platform value = "unix"/>
				</condition>
			</file_rule>
			<file_rule>
				<exclude>/imp_unix$</exclude>
				<condition>
					<platform value = "windows"/>
				</condition>
			</file_rule>
		</cluster>
	</target>
</system>
