<?xml version="1.0" encoding="ISO-8859-1"?>
<system xmlns="http://www.eiffel.com/developers/xml/configuration-1-15-0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.eiffel.com/developers/xml/configuration-1-15-0 http://www.eiffel.com/developers/xml/configuration-1-15-0.xsd" name="el_image_utils" uuid="229B6CC8-09AA-11DF-87A9-FFC4E5FCB1E7" library_target="el_image_utils">
	<description>Image Utilities

Image utilities providing:

1. SVG to PNG conversion using C library [http://librsvg.sourceforge.net/ librsvg]
2. Miscellaneous routines from the [https://cairographics.org/ Cairo graphics C library]</description>
	<target name="el_image_utils">
		<root all_classes="true"/>
		<option trace="false" debug="false" warning="true" full_class_checking="false" void_safety="none" syntax="standard">
			<assertions precondition="true" postcondition="true" check="true" invariant="true"/>
		</option>
		<external_include location="$(EL_C_LIB)/include"/>
		<external_include location="$(EL_C_LIB)/image-utils/source"/>
		<external_include location="$(EL_C_CAIRO)/include/cairo">
			<condition>
				<platform value="windows"/>
			</condition>
		</external_include>
		<external_include location="$(EL_C_CAIRO)/include/librsvg-2.0/librsvg">
			<condition>
				<platform value="windows"/>
			</condition>
		</external_include>
		<external_include location="$(EL_C_CAIRO)/include/glib-2.0">
			<condition>
				<platform value="windows"/>
			</condition>
		</external_include>
		<external_include location="$(EL_C_CAIRO)/lib/glib-2.0/include">
			<condition>
				<platform value="windows"/>
			</condition>
		</external_include>
		<external_include location="/usr/include/cairo">
			<condition>
				<platform value="unix"/>
			</condition>
		</external_include>
		<external_include location="/usr/include/librsvg-2.0/librsvg">
			<condition>
				<platform value="unix"/>
			</condition>
		</external_include>
		<external_include location="/usr/include/glib-2.0">
			<condition>
				<platform value="unix"/>
			</condition>
		</external_include>
		<external_include location="/usr/lib/x86_64-linux-gnu/glib-2.0/include">
			<condition>
				<platform value="unix"/>
			</condition>
		</external_include>
		<external_object location="$(EL_C_LIB)/image-utils/spec/$(ISE_PLATFORM)/elimageutils.dll">
			<description>elimageutils.dll requires:
$EL_C_LIB/image-utils/spec/$ISE_PLATFORM/elimageutils.dll</description>
			<condition>
				<platform value="windows"/>
				<dynamic_runtime value="true"/>
				<custom name="link_object" value="true"/>
			</condition>
		</external_object>
		<external_object location="$(EL_C_CAIRO)/spec/$(ISE_PLATFORM)/libcairo-2.dll">
			<description>libcairo-2.dll requires:
$EL_C_CAIRO/spec/$ISE_PLATFORM/*.dll</description>
			<condition>
				<platform value="windows"/>
				<custom name="link_object" value="true"/>
			</condition>
		</external_object>
		<external_object location="$(EL_C_LIB)/image-utils/spec/$(ISE_PLATFORM)/libelimageutils.so">
			<description>libelimageutils.so requires:
$EL_C_LIB/image-utils/spec/$ISE_PLATFORM/libelimageutils.so</description>
			<condition>
				<platform value="unix"/>
				<custom name="link_object" value="true"/>
			</condition>
		</external_object>
		<variable name="link_object" value="false"/>
		<library name="base" location="$ISE_LIBRARY\library\base\base.ecf"/>
		<library name="el_base" location="base\base.ecf"/>
		<library name="el_c_api" location="C-language-interface.ecf"/>
		<library name="el_os_command" location="os-command.ecf"/>
		<library name="el_pyxis_scan" location="pyxis-scan.ecf"/>
		<cluster name="image_utils" location="graphic\image\utils\" recursive="true">
			<file_rule>
				<exclude>/imp_mswin$</exclude>
				<condition>
					<platform value="unix"/>
				</condition>
			</file_rule>
			<file_rule>
				<exclude>/imp_unix$</exclude>
				<condition>
					<platform value="windows"/>
				</condition>
			</file_rule>
		</cluster>
	</target>
</system>
