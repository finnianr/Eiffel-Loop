pyxis-doc:
	version = 1.0; encoding = "ISO-8859-1"

system:
	configuration_ns = "1-16-0"; uuid = "229B73E4-09AA-11DF-87BB-93E5E9639079"
	name = EL_eco_db; library_target = EL_eco_db
	description: 
		"""
			Eco-DB (Eiffel CHAIN Orientated Database)

			**DEPENDS**

			* Eiffel-Loop base.ecf
			* [./library/document-scan.html document-scan.ecf]
			* [./library/encryption.html Eiffel-Loop encryption.ecf]
			* [./library/pyxis-scan.html pyxis-scan.ecf]
			* [./library/text-formats.html text-formats.ecf]

			**INTRODUCTION**

			''Eco-DB'' is an acronym for **E**iffel **C**HAIN **O**rientated **D**atabase, so called because it allows the
			extension by inheritance of a container conforming to ${CHAIN} to assume many of the characteristics of 
			a relational database table. ''Eco-DB'' leverages many of the facilities of the
			[./library/base/base.reflection.html reflection cluster]
			from the Eiffel-Loop base library, allowing class attributes to be managed as data table fields.

			Some of the main features of this database system are as follows:

			See doc/eco-db.txt for details
		"""
	
	target:
		name = EL_eco_db
		option: 
			syntax = standard; full_class_checking = false; void_safety = none
			trace = false; debug = false; warning = true
		root:
			all_classes = true

		# ISE libraries
		libraries:
			location = "$ISE_LIBRARY/library"
			base = "base/base.ecf"
			time = "time/time.ecf"

		# Eiffel Loop
		libraries:
			EL_base = "base/base.ecf"
			EL_doc_scan = "document-scan.ecf"
			EL_encryption = "encryption.ecf"
			EL_file_process = "file-processing.ecf"
			EL_pyxis_scan = "pyxis-scan.ecf"
			EL_text_formats = "text-formats.ecf"

		# Source code
		cluster_tree:
			db = "persistency/database/eco-db"
			


