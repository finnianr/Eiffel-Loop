pyxis-doc:
	version = 1.0; encoding = "ISO-8859-1"

system:
	configuration_ns = "1-16-0"
	name = EL_eros; library_target = EL_eros; uuid = "229b7574-09aa-11df-87bf-1b0f428786d3" 
	description:
		"""
			Eiffel Remote Object Server (EROS)
			
			EROS (for **E**iffel **R**emote **O**bject **S**erver), is an experimental an XML orientated remote
			procedure call application framework with an original protocol based purely on XML processing instructions
			rather that any special XML tags.
	
			**Custom Variables**
			
			When including `eros.ecf' in your project it is necessary to define a custom variable
			`eros_server_enabled'. To build a server application set the value to `true'. To build a client
			application set value to `false'.
			
			See doc/eros.txt for details
		"""
	target:
		name = EL_eros
		root:
			all_classes = true
		option:
			syntax = standard; full_class_checking = false; void_safety = none
			trace = false; debug = false; warning = true
			assertions:
				precondition = true; postcondition = true; check = true; invariant = true

		# ISE libraries
		libraries:
			location = "$ISE_LIBRARY/library"
			base = "base/base.ecf"
			net = "net/net.ecf"

		# ISE overrides
		library:
			vision2 = "override/ES-vision2.ecf"
			condition:
				eros_server_enabled = true

		# Eiffel-Loop libraries
		libraries:
			EL_base = "base/base.ecf"
			EL_app_manage = "app-manage.ecf"
			EL_doc_scan = "document-scan.ecf"
			EL_evolicity = "evolicity.ecf"
			EL_logging = "logging.ecf"
			EL_net_base = "network.ecf"
			EL_thread = "thread.ecf"
			EL_text_process = "text-process.ecf"
			EL_vision2 = "vision2-x.ecf"
			condition:
				eros_server_enabled = true
			EL_xml_scan = "xml-scan.ecf"

		# Source code
		cluster_tree:
			common = "network/eros/common"

		cluster_tree:
			client = "network/eros/client"
			condition:
				eros_server_enabled = false

		cluster_tree:
			server = "network/eros/server"
			condition:
				eros_server_enabled = true

