<?xml version="1.0" encoding="ISO-8859-1"?>
<!---->
<system name = "EL_public_key_encryption" library_target = "EL_public_key_encryption" uuid = "229b7448-09aa-11df-87bc-335404ca99d5" xmlns = "http://www.eiffel.com/developers/xml/configuration-1-16-0" xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation = "http://www.eiffel.com/developers/xml/configuration-1-16-0 http://www.eiffel.com/developers/xml/configuration-1-16-0.xsd">
	<description>
RSA Public-key Encryption

Extends Colin LeMahieu&apos;s arbitrary precision integer library to conform to some RSA standards.
The most important is the ability to read key-pairs conforming to the
[https://en.wikipedia.org/wiki/X.509#Sample_X.509_certificates X509 PKCS1 standard].
The top level class to access these facilities is [$source EL_MODULE_X509_COMMAND].

The private key reader however uses a non-standard encryption scheme. It assumes the file
is en	crypted using the Eiffel-Loop utility contained in `el_toolkit&apos;.
See class [$source CRYPTO_APP] for details.
	</description>
	<target name = "EL_public_key_encryption">
		<root all_classes = "true"/>
		<option namespace = "Eiffel-Loop.Library.PKE" syntax = "standard" full_class_checking = "false" void_safety = "none" trace = "false" debug = "false" warning = "true">
			<assertions precondition = "true" postcondition = "true" check = "true" invariant = "true"/>
		</option>
		<!--ISE libraries-->
		<library name = "base" location = "$ISE_LIBRARY/library/base/base.ecf"/>
		<library name = "time" location = "$ISE_LIBRARY/library/time/time.ecf"/>
		<!--ISE contributions-->
		<variable name = "eapml_limb_type" value = "natural_32"/>
		<library name = "encryption_base" location = "$ISE_LIBRARY/contrib/library/text/encryption/eel/eel.ecf"/>
		<library name = "integer_x" location = "$ISE_LIBRARY/contrib/library/math/eapml/eapml.ecf"/>
		<!--Eiffel-Loop-->
		<library name = "EL_base" location = "base/base.ecf"/>
		<library name = "EL_compression" location = "compression.ecf"/>
		<library name = "EL_eco_db" location = "Eco-DB.ecf"/>
		<library name = "EL_encryption" location = "encryption.ecf"/>
		<library name = "EL_os_command" location = "os-command.ecf"/>
		<library name = "EL_evolicity" location = "evolicity.ecf"/>
		<library name = "EL_text_process" location = "text-process.ecf"/>
		<!--Source code-->
		<cluster name = "RSA_public_key" location = "text/rsa-encryption" recursive = "true">
			<file_rule>
				<exclude>/imp_mswin$</exclude>
				<condition>
					<platform value = "unix"/>
				</condition>
			</file_rule>
			<file_rule>
				<exclude>/imp_unix$</exclude>
				<condition>
					<platform value = "windows"/>
				</condition>
			</file_rule>
		</cluster>
	</target>
</system>
