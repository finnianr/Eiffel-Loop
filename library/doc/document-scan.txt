**XML Node Scanning**

The abstraction [$source EL_PARSE_EVENT_SOURCE] representing a parse-event source has 5 useful descendants:

	EL_PARSE_EVENT_SOURCE*
		[$source EL_BINARY_ENCODED_PARSE_EVENT_SOURCE]
		[$source EL_DEFAULT_PARSE_EVENT_SOURCE]
		[$source EL_EXPAT_XML_PARSER]
			[$source EL_EXPAT_XML_WITH_CTRL_Z_PARSER]
			[$source EL_EXPAT_XML_PARSER_OUTPUT_MEDIUM]
		[$source EL_PYXIS_PARSER]

Class [$source EL_BINARY_ENCODED_PARSE_EVENT_SOURCE] is a binary encoded XML event source, useful for reducing the size of large documents for transfer across a network.

The following are the various kinds of scanners which can process the output from these event sources.

**Eiffel Object Building Scanners**

The classes [$source EL_BUILDABLE_FROM_XML] and [$source EL_BUILDABLE_FROM_PYXIS] can be used to implement a sophisticated Eiffel object building scheme based on the idea of mapping builder agents to xpaths relative to particular element contexts. Only a small subset of the xpath standard is used. The framework has the following features:

* Map particular XML element contexts to Eiffel classes and then map xpaths that are relative to these elements, to attribute assigning agents.
* Supports xpath mapping based on attribute value predicates, i.e. Expressions of the form **AAA/BBB[@x='y']** may be used to map building agents.
* Supports recursive data models.

**General Xpath to Eiffel agent mapper**

The class [$source EL_CREATEABLE_FROM_XPATH_MATCH_EVENTS] implements a method for scanning a document and triggering various Eiffel agents according to a table of xpath to agent mappings.

**Eiffel Aware Document Scanner**

The class [$source EL_SMART_BUILDABLE_FROM_NODE_SCAN] is an XML parser that reacts to a special XML processing instruction, telling it to build an Eiffel object of a particular type.
