pyxis-doc:
	version = 1.0; encoding = "ISO-8859-1"

system:
	configuration_ns = "1-16-0"; uuid = "229b52e2-09aa-11df-8776-57ee66e3341a" 
	name = EL_http_client; library_target = EL_http_client
	description:
		"""
			HTTP Client Services

			Classes for remotely interacting with a HTTP server. 
			Supports the HTTP commands: POST, GET and HEAD.
		"""
	target:
		name = EL_http_client
		root:
			all_classes = true
		option:
			namespace = "Eiffel-Loop.Library.http"
			syntax = standard; full_class_checking = false; void_safety = none
			trace = false; debug = false; warning = true
			assertions:
				precondition = true; postcondition = true; check = true; invariant = true

		# C externals
		external_include: 
			location = "$(EL_C_LIB)/cURL/source"

		unix_externals:		
			external_object:
				location = "-L$(EL_C_LIB)/cURL/spec/$(ISE_PLATFORM) -lelcurl"

		windows_externals:		
			external_object:
				location = "$(EL_C_LIB)/cURL/spec/$(ISE_PLATFORM)/elcurl.lib"

		# ISE libraries
		libraries:
			location = "$ISE_LIBRARY/library"
			base = "base/base.ecf"
			net = "net/net.ecf"
			time = "time/time.ecf"

		# ISE override
		library:
			url_client = "override/ES-cURL.ecf"

		# Eiffel Loop
		libraries:
			EL_base = "base/base.ecf"
			EL_c_api = "C-language-interface.ecf"
			EL_network = "network.ecf"
			EL_os_command = "os-command.ecf"
			EL_pyxis_scan = "pyxis-scan.ecf"
			EL_text_formats = "text-formats.ecf"
			EL_text_process = "text-process.ecf"
			EL_thread = "thread.ecf"
			EL_vtd_xml = "vtd-xml.ecf"
			EL_xml_scan = "xml-scan.ecf"

		# Source code
		cluster_tree:
			http = "network/http"
			option:
				namespace = "Eiffel-Loop.http"
			platform_list:
				"imp_mswin; imp_unix"


