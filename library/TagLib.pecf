pyxis-doc:
	version = 1.0; encoding = "ISO-8859-1"

# Pyxis as an acronym stands for: Pythonic XML ideal source.
# It is also a Latin transliteration of a Greek word for a type of pottery used by women to hold 
# cosmetics, trinkets or jewellery. 

system:
	configuration_ns = "1-16-0"; uuid = "243285C8-F255-11E9-AF8E-E3A3935D48CC" 
	name = EL_taglib; library_target = EL_taglib
	description:
		"""
			TagLib Audio Meta-Data Library

			Eiffel binding for the ID3 v1 and v2 tag manager from the [https://taglib.org/ TagLib C++ library].

			TagLib can read and edit the meta-data of many popular audio formats. Currently it supports both ID3v1
			and ID3v2 for MP3 files, Ogg Vorbis comments and ID3 tags and Vorbis comments in FLAC, MPC, Speex, WavPack,
			TrueAudio, WAV, AIFF, MP4 and ASF files.

			**Test Set**

			[./test/test.taglib.html test/test.ecf#taglib]

			**Future Development**

			Support for `m4a' and `flac' meta-data.

			**Credits**

			Special thanks to [https://github.com/scotchi Scott Wheeler], the original author of the TagLib library,
			for his kind assistance and and support in creating this Eiffel binding.
		"""
	target:
		name = EL_taglib
		option:
			syntax = standard; full_class_checking = false; void_safety = none
			trace = false; debug = false; warning = true
			assertions:
				precondition = true; postcondition = true; check = true; invariant = true
		root:
			all_classes = true

		windows_externals:
			external_include:
				location = "$(EXT_CPP_TAGLIB)\\taglib"
			external_include:
				location = "$(EXT_CPP_TAGLIB)\\taglib\\mpeg\\id3v2"
			external_include: 
				location = "$(EXT_CPP_TAGLIB)\\taglib\\toolkit"
			external_object:
				location = "$(EL_CPP_TAGLIB)\\taglib\\spec\\$(ISE_PLATFORM)\\tag.lib"

		# For Unix
		unix_externals:
			external_include:
				location = "$(EXT_CPP_TAGLIB)/taglib"
			external_include:
				location = "$(EXT_CPP_TAGLIB)/taglib/mpeg/id3v2"
			external_include:
				location = "$(EXT_CPP_TAGLIB)/taglib/toolkit"
			external_object:
				location = "-L$(EL_CPP_TAGLIB)/spec/$(ISE_PLATFORM) -ltag"
			external_object:
				location = "-L$(ISE_LIBRARY)/C_library/zlib -lz"

		# ISE libraries
		libraries:
			location = "$ISE_LIBRARY/library"
			base = "base/base.ecf"
			time = "time/time.ecf"
		library:
			zlib = "$ISE_LIBRARY/C_library/zlib/clibs_zlib.ecf"
			condition:
				platform = windows

		# Eiffel-Loop libraries
		libraries:
			EL_base = "base/base.ecf"
			EL_c_api = "C-language-interface.ecf"

		# Source code
		cluster_tree:
			taglib = "multimedia/ID3/taglib"
			platform_list:
				"imp_mswin; imp_unix"


