pyxis-doc:
	version = 1.0; encoding = "ISO-8859-1"

system:
	configuration_ns = "1-16-0"
	name = EL_base; library_target = EL_base; uuid = "229b789e-09aa-11df-87c7-1bf8afd2bbad" 
	
	target:
		name = EL_base
		description: 
			"""
				Base classes for Eiffel-Loop

				Clusters:

				* Data Structure
				* Math
				* Runtime
				* Data Persistence
				* Text Processing
				* Utility
			"""
		root:
			all_classes = true

		option:
			namespace = "Eiffel-Loop.Library"; trace = false; debug = false; warning = true
			syntax = standard; full_class_checking = false; void_safety = none
			assertions:
				precondition = true; postcondition = true; check = true; invariant = false

		mapping:
			ZSTRING = EL_ZSTRING
		mapping:
			DIR_PATH = EL_DIR_PATH
		mapping:
			FILE_PATH = EL_FILE_PATH

		# Needed for Windows XP
		variable:
			link_object = false
			
		external_object:
			location = "$EL_CONTRIB/C/MSC-runtime/spec/$ISE_PLATFORM/msvcr71.dll"
			description:
				"""
					msvcr71.dll requires:
					$EL_CONTRIB/C/MSC-runtime/spec/$ISE_PLATFORM/msvcr71.dll
				"""
			condition:
				platform = windows
				custom:
					name = link_object; value = true

		# ISE libraries
		libraries:
			location = "$ISE_LIBRARY/library"
			base = "base/base.ecf"; base_ext = "base_extension/base_extension.ecf"
			encoding = "encoding/encoding.ecf"
			ise_i18n = "i18n/i18n.ecf"
			condition:
				platform = windows
			net = "net/net.ecf"
			time = "time/time.ecf"
			thread = "thread/thread.ecf"
			uuid = "uuid/uuid.ecf"

		# CLUSTERS
		cluster_tree:
			data_structure = data_structure
			description:
				"""
					Data Structure
					
					Various hash-table, array, list, chain and linear types

					See doc/base.data_structure.txt for details
				"""
		cluster_tree:
			math = math
			description:
				"""
					Math
					
					Some basic math classes for the following:

					* 2D geometry
					* Calculating integrals of arbitrary functions
					* Representing column vectors
				"""
		cluster_tree:
			command_line = "runtime/command-line"
			description:
				"""
					Command-line Arguments
					
					Classes for reading and mapping command line arguments
				"""
		cluster_tree:
			file_system = "runtime/file-system"
			description:
				"""
					File System
					
					Classes for the following:

					* Reading file properties
					* Processing directory data
				"""
			platform_list:
				"imp_mswin; imp_unix"

		cluster_tree:
			io = "runtime/io"
			description:
				"""
					Input/Output
					
					Classes for the following:

					* Writing to the console with color highlighting
					* Read user input data
				"""
			platform_list:
				"imp_mswin; imp_unix"

		cluster_tree:
			kernel = kernel
			description:
				"""
					Kernel
					
					Fundamental base classes
				"""
		cluster_tree:
			reflection = "runtime/reflection"
			description:
				"""
					Class Reflection
					
					Building on the basic ISE reflection mechanisms, this cluster makes possible a very flexible way
					of exchanging data between Eiffel objects and any structured plaintext format, and also a binary
					memory block conforming to [$source EL_MEMORY_READER_WRITER] (inherits [$source SED_MEMORY_READER_WRITER])

					See doc/base.reflection.txt for details
				"""
		cluster:
			runtime = runtime
			description:
				"""
					Runtime Operations
					
					Classes for the following:

					* Exception handling
					* Reading and writing from memory locations
					* Accessing operating environment information
					* Tracking progress of time consuming operations
					* Managing shared resources for competing threads
				"""
			cluster_tree:
				exception = "$|exception"
			cluster_tree:
				memory = "$|memory"
				platform_list:
					"imp_mswin; imp_unix"

			cluster_tree:
				process = "$|process"
				platform_list:
					"imp_mswin; imp_unix"

			cluster_tree:
				progress_track = "$|progress-track"
			cluster_tree:
				resource_share = "$|resource-share"

		cluster_tree:
			persistency = persistency
			description:
				"""
					Data Persistence

					Classes providing the following facilities:

					* Reading and writing arrays of floating-point type [$source REAL_64].
					* Files that notify a listener of byte-count written and read.
					* A file conforming to [$source PLAIN_TEXT_FILE] that implements [$source EL_OUTPUT_MEDIUM]
					* File line source and other abstractions
				"""
		cluster_tree:
			string = "text/string"
			description:
				"""
					String Handling

					Classes providing the following:

					* Managing lists of strings
					* String escaping
					* Efficient string splitting
					* Recording and managing string edit histories
					* Abstractions for objects createable from strings
					* String occurrence interval lists
				"""
		cluster_tree:
			zstring = "text/zstring"
			description:
				"""
					Class ZSTRING

					An implementation of a memory compact string with the same unicode character range as the ''base.ecf''
					class [$source STRING_32] and conforming to [$source STRING_GENERAL].
					The [$source ZSTRING] class (alias for [$source EL_ZSTRING]) has many additional
					routines not found in [$source STRING_32], as for example: Python like tuple substitution.
					
					**See Articles**

					* [https://www.eiffel.org/blog/finnianr/zstring_released_in_eiffelloop_131 ZSTRING released in Eiffel-Loop 1.3.1]
					* [https://www.eiffel.org/blog/finnianr/introducing_class_zstring Introducing class ZSTRING]
					* [https://www.eiffel.org/article/iso8859_is_dead_long_live_iso8859 ISO-8859 is dead, long live ISO-8859]

					**Benchmarks [$source ZSTRING] vs [$source STRING_32]**

					* [./benchmark/ZSTRING-benchmarks-latin-1.html Base character-set Latin-1]
					* [./benchmark/ZSTRING-benchmarks-latin-15.html Base character-set Latin-15]
				"""
		cluster:
			text = text
			description:
				"""
					Text Processing

					Classes providing the following:

					* Character and character sequence conversion
					* Character encoding
					* File, directory and resource naming
					* Deferred internationalization
					* Text line processing
					* Parsing and manipulating name-value pairs
					* Associating formatting styles with strings
					* URI encoding/decoding
					* UTF encoding/decoding
				"""
			cluster_tree:
				imp_unix = "$|imp_unix"
				condition:
					platform = unix
			cluster_tree:
				imp_mswin = "$|imp_mswin"
				condition:
					platform = windows
			cluster_tree:
				character = "$|character"
			cluster_tree:
				text_encoding = "$|encoding"
			cluster_tree:
				file_path = "$|file-path"
			cluster_tree:
				general = "$|general"
			cluster_tree:
				i18n = "$|i18n"
			cluster_tree:
				line_traversal = "$|line-traversal"
			cluster_tree:
				name_value = "$|name-value"
			cluster_tree:
				styled = "$|styled"
		cluster_tree:
			utility = utility
			description:
				"""
					Utility
					
					Classes providing the following facilities:

					* Benchmarking
					* Date/time formatting
					* Memory writing
					* Cyclic redundancy check
					* Command shells
					* Extensions to ES uuid.ecf
				"""


