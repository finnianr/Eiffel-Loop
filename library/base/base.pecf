pyxis-doc:
	version = 1.0; encoding = "ISO-8859-1"

system:
	configuration_ns = "1-16-0"
	name = EL_base; uuid = "229b789e-09aa-11df-87c7-1bf8afd2bbad" 
	library_target = EL_base
	
	target:
		name = EL_base
		description: 
			"""
				Base classes for Eiffel-Loop

				Clusters:

				* Data Structure
				* Math
				* Runtime
				* Data Persistence
				* Text Processing
				* Utility
			"""
		root:
			all_classes = true

		option:
			namespace = "Eiffel-Loop.Library"; trace = false; debug = false; warning = true
			syntax = standard; full_class_checking = false; void_safety = none
			assertions:
				precondition = true; postcondition = true; check = true; invariant = false

		mapping:
			old_name = ZSTRING; new_name = EL_ZSTRING

		# Needed for Windows XP
		variable:
			name = link_object; value = false
			
		external_object:
			location = "$EL_CONTRIB/C/MSC-runtime/spec/$ISE_PLATFORM/msvcr71.dll"
			description:
				"""
					msvcr71.dll requires:
					$EL_CONTRIB/C/MSC-runtime/spec/$ISE_PLATFORM/msvcr71.dll
				"""
			condition:
				platform:
					value = windows
				custom:
					name = link_object; value = true

		library: 
			name = base; location = "$ISE_LIBRARY/library/base/base.ecf"

		library:
			name = base_ext; location = "$ISE_LIBRARY/library/base_extension/base_extension.ecf"

		library:
			name = encoding; location = "$ISE_EIFFEL/library/encoding/encoding.ecf"

		library:
			name = net; location = "$ISE_LIBRARY/library/net/net.ecf"

		library:
			name = time; location = "$ISE_LIBRARY/library/time/time.ecf"

		library:
			name = thread; location = "$ISE_LIBRARY/library/thread/thread.ecf"

		library:
			name = uuid; location = "$ISE_LIBRARY/library/uuid/uuid.ecf"
		
		# GOBO
		library:
			name = gobo_base; location = "../gobo-base.ecf"
			
		# CLUSTERS
		cluster:
			name = data_structure; location = data_structure; recursive = true
			description:
				"""
					Data Structure
					
					Various hash-table, array, list, chain and linear types

					See doc/base.data_structure.txt for details
				"""

		cluster:
			name = math; location = math; recursive = true
			description:
				"""
					Math
					
					Some basic math classes for the following:

					* 2D geometry
					* Calculating integrals of arbitrary functions
					* Representing column vectors
				"""
		cluster:
			name = command_line; location = "runtime/command-line"; recursive = true
			description:
				"""
					Command-line Arguments
					
					Classes for reading and mapping command line arguments
				"""
		cluster:
			name = file_system; location = "runtime/file-system"; recursive = true
			description:
				"""
					File System
					
					Classes for the following:

					* Reading file properties
					* Processing directory data
				"""
			file_rule:
				exclude:
					"imp_mswin$"
				condition:
					platform:
						value = unix

			file_rule:
				exclude:
					"imp_unix$"
				condition:
					platform:
						value = windows

		cluster:
			name = io; location = "runtime/io"; recursive = true
			description:
				"""
					Input/Output
					
					Classes for the following:

					* Writing to the console with color highlighting
					* Read user input data
				"""
			file_rule:
				exclude:
					"imp_mswin$"
				condition:
					platform:
						value = unix

			file_rule:
				exclude:
					"imp_unix$"
				condition:
					platform:
						value = windows

		cluster:
			name = reflection; location = "runtime/reflection"; recursive = true
			description:
				"""
					Class Reflection
					
					Classes for setting and getting data attributes using class reflection.
				"""

		cluster:
			name = runtime; location = runtime
			description:
				"""
					Runtime Operations
					
					Classes for the following:

					* Exception handling
					* Reading and writing from memory locations
					* Accessing operating environment information
					* Tracking progress of time consuming operations
					* Managing shared resources for competing threads
				"""
			cluster:
				name = exception; location = "$|exception"; recursive = true
			cluster:
				name = memory; location = "$|memory"; recursive = true
			cluster:
				name = process; location = "$|process"; recursive = true
				file_rule:
					exclude:
						"imp_mswin$"
					condition:
						platform:
							value = unix

				file_rule:
					exclude:
						"imp_unix$"
					condition:
						platform:
							value = windows
			cluster:
				name = progress_track; location = "$|progress-track"; recursive = true
			cluster:
				name = resource_share; location = "$|resource-share"; recursive = true

		cluster:
			name = persistency; location = persistency; recursive = true
			description:
				"""
					Data Persistence

					Classes providing the following facilities:

					* Reading and writing arrays of floating-point type `DOUBLE'.
					* Files that notify a listener of byte-count written and read.
					* A file conforming to `PLAIN_TEXT_FILE' that implements [$source EL_OUTPUT_MEDIUM]
					* File line source and other abstractions
				"""
		cluster:
			name = string; location = "text/string"; recursive = true
			description:
				"""
					String Handling

					Classes providing the following:

					* Managing lists of strings
					* String escaping
					* A memory compact string with same character range as `STRING_32'
					* Efficient string splitting
					* Recording and managing string edit histories
					* Abstractions for objects createable from strings
					* String occurrence interval lists
				"""
		cluster:
			name = text; location = text
			description:
				"""
					Text Processing

					Classes providing the following:

					* Character and character sequence conversion
					* Character encoding
					* File, directory and resource naming
					* Deferred internationalization
					* Text line processing
					* Parsing and manipulating name-value pairs
					* Associating formatting styles with strings
					* URI encoding/decoding
					* UTF encoding/decoding
				"""
			cluster:
				name = character; location = "$|character"; recursive = true
			cluster:
				name = text_encoding; location = "$|encoding"; recursive = true
			cluster:
				name = file_naming; location = "$|file-naming"; recursive = true
			cluster:
				name = general; location = "$|general"; recursive = true
			cluster:
				name = i18n; location = "$|i18n"; recursive = true
			cluster:
				name = line_processing; location = "$|line-processing"; recursive = true
			cluster:
				name = name_value; location = "$|name-value"; recursive = true
			cluster:
				name = styled; location = "$|styled"; recursive = true
		cluster:
			name = utility; location = utility; recursive = true
			description:
				"""
					Utility
					
					Classes providing the following facilities:

					* Benchmarking
					* Date/time formatting
					* Memory writing
					* Cyclic redundancy check
					* Command shells
					* Extensions to ES uuid.ecf
				"""


