**Key Features**

* Support for mapping between various name-style conventions: eg. kebab-case, camel-case, snake-case, upper-snake-case etc.
* Support of automatic initialization of reference types with means of adding adhoc types. (non-void safe compiler)
* Support for numeric enumerations with reflective assignment from strings and optional mappings to extended descriptions. For example: ${EL_PASSPHRASE_ATTRIBUTES_ENUM}.
* Basis for reflective initialization of class attributes from command line arguments. See class ${EL_COMMAND_LINE_OPTIONS}
* Support for reading and writing to strings conforming to ${STRING_GENERAL}
* Support for reading from objects conforming to ${EL_READABLE} and writing to objects conforming to ${EL_WRITEABLE}
* Support for reading writing to instance of ${EL_MEMORY_READER_WRITER} (inherits ${SED_MEMORY_READER_WRITER})
* Support for recursively pretty-printing object data to console (with color highlighting in Linux)
* Support for sinking field data into object conforming to ${EL_DATA_SINKABLE}. Useful for creating MD5 or SHA-256 hashes.
* Flexible way to include and exclude fields stored in field table.
* Support for extracting useful type information from agents in an easily accessible form.
* Support over 50 standard field types and composite types with ad-hoc support for other classes to serialize to ${EL_MEMORY_READER_WRITER}.

	EL_REFLECTED_FIELD*
		${EL_REFLECTED_REFERENCE [G]}
			${EL_REFLECTED_COLLECTION [G]}
			${EL_REFLECTED_TEMPORAL* [G -> ABSOLUTE]}
				${EL_REFLECTED_TIME}
				${EL_REFLECTED_DATE_TIME}
				${EL_REFLECTED_DATE}
			${EL_REFLECTED_TUPLE}
			${EL_REFLECTED_BOOLEAN_REF}
			${EL_REFLECTED_MANAGED_POINTER}
			${EL_REFLECTED_STORABLE}
			${EL_REFLECTED_REFERENCE_ANY}
			${EL_REFLECTED_HASHABLE_REFERENCE [H -> HASHABLE]}
				${EL_REFLECTED_STRING* [S -> READABLE_STRING_GENERAL create make end]}
					${EL_REFLECTED_STRING_8}
					${EL_REFLECTED_IMMUTABLE_STRING_8}
					${EL_REFLECTED_IMMUTABLE_STRING_32}
					${EL_REFLECTED_STRING_32}
					${EL_REFLECTED_URI [U -> EL_URI create make end]}
					${EL_REFLECTED_ZSTRING}
				${EL_REFLECTED_PATH}
			${EL_REFLECTED_MAKEABLE_FROM_STRING* [MAKEABLE -> EL_MAKEABLE_FROM_STRING [STRING_GENERAL]]}
				${EL_REFLECTED_MAKEABLE_FROM_STRING_8}
				${EL_REFLECTED_MAKEABLE_FROM_STRING_32}
				${EL_REFLECTED_MAKEABLE_FROM_ZSTRING}
		${EL_REFLECTED_EXPANDED_FIELD* [G]}
			${EL_REFLECTED_BOOLEAN}
			${EL_REFLECTED_NUMERIC_FIELD* [N -> NUMERIC]}
				${EL_REFLECTED_REAL_32}
				${EL_REFLECTED_INTEGER_FIELD* [N -> NUMERIC]}
					${EL_REFLECTED_INTEGER_8}
					${EL_REFLECTED_INTEGER_32}
					${EL_REFLECTED_INTEGER_64}
					${EL_REFLECTED_NATURAL_8}
					${EL_REFLECTED_NATURAL_16}
					${EL_REFLECTED_NATURAL_32}
					${EL_REFLECTED_NATURAL_64}
					${EL_REFLECTED_INTEGER_16}
				${EL_REFLECTED_REAL_64}
			${EL_REFLECTED_CHARACTER_8}
			${EL_REFLECTED_CHARACTER_32}
			${EL_REFLECTED_POINTER}
