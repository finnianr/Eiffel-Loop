**Hash Tables**

	HASH_TABLE [G, K -> ${HASHABLE}]
		${EL_COUNTER_TABLE [K -> HASHABLE]}
		${EL_STRING_ESCAPER [S -> STRING_GENERAL create make end]}
		${EL_FUNCTION_RESULT_TABLE [TARGET, R]}
		${EL_HTTP_COOKIE_TABLE}
		${EL_CODE_TABLE [K -> HASHABLE]}
			${EL_UNIQUE_CODE_TABLE [K -> HASHABLE]}
		${EL_ESCAPE_TABLE}
		${EL_IMMUTABLE_STRING_TABLE* [GENERAL -> STRING_GENERAL create make end, IMMUTABLE -> IMMUTABLE_STRING_GENERAL]}
				${EL_TUPLE_FIELD_TABLE}
		${EL_STRING_GENERAL_UNESCAPER* [R -> READABLE_STRING_GENERAL, G -> STRING_GENERAL]}
		${EL_GROUP_TABLE [G, K -> HASHABLE]}
			${EL_FUNCTION_GROUP_TABLE [G, K -> HASHABLE]}
		${ECD_INDEX_TABLE* [G -> EL_STORABLE create make_default end, K -> HASHABLE]}
			${ECD_REFLECTIVE_INDEX_TABLE [G -> EL_REFLECTIVELY_SETTABLE_STORABLE create make_default end, K -> HASHABLE]}
		${EL_CACHE_TABLE* [G, K -> HASHABLE]}
			${EL_INITIALIZED_OBJECT_FACTORY [F -> EL_FACTORY [G], G]}
				${EL_INITIALIZED_FIELD_FACTORY}
			${EL_AGENT_CACHE_TABLE [G, K -> HASHABLE]}
		${EL_HASH_TABLE [G, K -> HASHABLE]}
			${EL_STRING_GENERAL_TABLE [G]}
			${EL_CONFORMING_INSTANCE_TABLE [G]}
			${EL_STRING_HASH_TABLE [G, K -> STRING_GENERAL create make end]}
			${EL_STRING_CONVERSION_TABLE}
			${EL_TYPE_TABLE [G]}
			${EL_IMMUTABLE_KEY_8_TABLE [G]}
		${EL_FUNCTION_CACHE_TABLE [G, OPEN_ARGS -> TUPLE create default_create end]}
			${EL_FILLED_STRING_8_TABLE}
			${EL_FILLED_STRING_TABLE* [STR -> READABLE_STRING_GENERAL]}

**Linear Chains**

	EL_LINEAR* [G]
		${EL_FILE_GENERAL_LINE_SOURCE* [S -> STRING_GENERAL create make end]}
			${EL_STRING_8_IO_MEDIUM_LINE_SOURCE}
			${EL_PLAIN_TEXT_LINE_SOURCE}
				${EL_ENCRYPTED_PLAIN_TEXT_LINE_SOURCE}
			${EL_ZSTRING_IO_MEDIUM_LINE_SOURCE}
		${EL_LINEAR_STRINGS* [S -> STRING_GENERAL create make end]}
			${EL_SPLIT_STRING_LIST [S -> STRING_GENERAL create make end]}
			${EL_STRING_CHAIN* [S -> STRING_GENERAL create make end]}
				${EL_LINKED_STRING_LIST [S -> STRING_GENERAL create make, make_empty end]}
				${EL_STRING_LIST [S -> STRING_GENERAL create make end]}
		${EL_CHAIN* [G]}
			${EL_QUERYABLE_CHAIN* [G]}
				${EL_QUERYABLE_ARRAYED_LIST [G]}
					${ECD_ARRAYED_LIST [G -> EL_STORABLE create make_default end]}
						${ECD_STORABLE_ARRAYED_LIST [G -> EL_STORABLE create make_default end]}
			${EL_ARRAYED_LIST [G]}
				${EL_NAMEABLES_LIST [G -> EL_NAMEABLE [READABLE_STRING_GENERAL]]}
				${EL_UNIQUE_ARRAYED_LIST [G -> HASHABLE]}
				${EL_ARRAYED_COMPACT_INTERVAL_LIST}
				${EL_CALL_SEQUENCE [CALL_ARGS -> TUPLE create default_create end]}
				${EL_DISCARDING_ARRAYED_LIST [G]}
				${EL_DIRECTORY_LIST}
				${EL_SORTABLE_ARRAYED_LIST [G -> COMPARABLE]}
				${EL_ARRAYED_RESULT_LIST [G, R]}
				${EL_SPLIT_READABLE_STRING_LIST [S -> READABLE_STRING_GENERAL create make end]}
				${EL_TRANSLATION_ITEMS_LIST}
				${EL_ARRAYED_INTERVAL_LIST}
					${EL_SEQUENTIAL_INTERVALS}
						${EL_OCCURRENCE_INTERVALS}
				${EL_ARRAYED_MAP_LIST [K, G]}
					${EL_KEY_INDEXED_ARRAYED_MAP_LIST [K -> COMPARABLE, G]}
					${EL_CONFORMING_INSTANCE_TYPE_MAP [G]}
					${EL_HASHABLE_KEY_ARRAYED_MAP_LIST [K -> HASHABLE, G]}
					${EL_STYLED_TEXT_LIST* [S -> STRING_GENERAL]}
			${EL_STRING_CHAIN* [S -> STRING_GENERAL create make end]}

**Container Structure Extensions**

This ${EL_CONTAINER_STRUCTURE [G]} abstraction provides many extra facilities for classes that implement 
the ${CONTAINER [G]} base class. It inherits class ${EL_CONTAINER_NUMERIC_CALCULATER [G]}.

	EL_CONTAINER_STRUCTURE* [G]
		${EL_HASH_SET [H -> HASHABLE]}
			${EL_MEMBER_SET [G -> EL_SET_MEMBER [G]]}
			${EL_FIELD_NAME_SET}
		${EL_CONTAINER_WRAPPER [G]}
			${EL_SAVED_CURSOR [G]}
		${EL_RESULT_SUMMATOR [G, N -> NUMERIC]}
		${EL_CONTAINER_ITEM [G]}
		${EL_RESULT_MAXIMUM [G, N -> (NUMERIC, COMPARABLE)]}
		${EL_LINEAR* [G]}
			${EL_CHAIN* [G]}
				${EL_QUERYABLE_CHAIN* [G]}
					${EL_QUERYABLE_ARRAYED_LIST [G]}
				${EL_ARRAYED_LIST [G]}

**Other Classes**

* Sub-array abstraction and byte array
* Repeated numeric encoding
* Tuple initialization
* Object initialization abstractions
* Software versioning

