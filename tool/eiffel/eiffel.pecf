pyxis-doc:
	version = 1.0; encoding = "ISO-8859-1"

# Pyxis is data format inspired by the Python programming language and designed to be a more
# readable supplement/substitute for XML configuration files.

# Pyxis as an acronym stands for: Pythonic XML ideal source.
# It is also a Latin transliteration of a Greek word for a type of pottery used by women to hold 
# cosmetics, trinkets or jewellery. 

system:
	configuration_ns = "1-16-0"
	name = el_eiffel; uuid = "EEA36E90-5A49-11E7-8290-A34D58BF65CD"
	
	# "Swiss army knife" toolkit containing a suite of command line tools for Eiffel development
	target: 
		name = classic

		root:
			class = APPLICATION_ROOT; feature = make

		option: 
			syntax = standard; full_class_checking = false; void_safety = none
			trace = false; debug = false; warning = true

			assertions:
				precondition = true; postcondition = true; check = true; invariant = false

		setting:
			name = address_expression; value = false

		setting:
			name = array_optimization; value = false

		setting:
			name = check_vape; value = true

		setting:
			name = console_application; value = true

		setting:
			name = dead_code_removal; value = true

		setting:
			name = dynamic_runtime; value = false

		setting:
			name = exception_trace; value = false

		setting:
			name = inlining; value = false

		#setting:
		#	name = inlining_size; value = 3

		setting:
			name = line_generation; value = false

		setting:
			name = concurrency; value = thread

		precompile: 
			name = precompile; location = "$EIFFEL_LOOP/precomp/$ISE_PLATFORM/console-application.ecf"
			
		# LIBRARIES

		library:
			name = base; location = "$ISE_LIBRARY/library/base/base.ecf"

		library:
			name = base_ext; location = "$ISE_LIBRARY/library/base_extension/base_extension.ecf"

		library:
			name = time; location = "$ISE_LIBRARY/library/time/time.ecf"

		library:
			name = arbitrary_precision_math; location = "$ISE_LIBRARY/contrib/library/math/eapml/eapml.ecf"

		library:
			name = gobo_base; location = "$EIFFEL_LOOP/library/gobo-base.ecf"

		library:
			name = testing; location = "$ISE_LIBRARY/library/testing/testing.ecf"

		# Eiffel-Loop
		library:
			name = EL_base; readonly = false
			location = "$EIFFEL_LOOP/library/base/base.ecf"

		library:
			name = EL_app_manage; readonly = false
			location = "$EIFFEL_LOOP/library/app-manage.ecf"

		library:
			name = EL_ftp; readonly = false
			location = "$EIFFEL_LOOP/library/ftp.ecf"

		library:
			name = EL_os_command; readonly = false
			location = "$EIFFEL_LOOP/library/os-command.ecf"

		library:
			name = EL_evolicity; readonly = false
			location = "$EIFFEL_LOOP/library/evolicity.ecf"

		library:
			name = EL_logging; readonly = false
			location = "$EIFFEL_LOOP/library/logging.ecf"

		library:
			name = EL_testing; readonly = false
			location = "$EIFFEL_LOOP/library/testing.ecf"

		library:
			name = EL_vtd_xml; readonly = false
			location = "$EIFFEL_LOOP/library/vtd-xml.ecf"

		library:
			name = EL_xdoc_scanning; readonly = false
			location = "$EIFFEL_LOOP/library/xdoc-scanning.ecf"

		cluster:
			name = project; location = "source"; recursive = true

