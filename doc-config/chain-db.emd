Implements "in-memory" database tables based on an interface defined by the kernel Eiffel class [https://archive.eiffel.com/doc/online/eiffel50/intro/studio/index-09A/base/structures/list/chain_chart.html `CHAIN']. There are two table types:

1. Monolithic tables which can only be saved to disk as a whole and any new items which have not been saved will be lost.
2. Transactional tables where the effects of the table item operations: ''extend, replace or delete'',  are immediately committed to disk in an editions table file. When the editions file gets too large, the editions are consolidated into the main table file.

Monolithic tables are implemented by class: [./library/persistency/database/chain-db/el_storable_chain.html `EL_STORABLE_CHAIN'] which takes a generic paramter of type [./library/base/utility/memory/el_storable.html `EL_STORABLE'].

This class defines the basic database ''CRUD'' concept of **C**reate, **R**ead, **U**pdate and **D**elete:

**Create:** is implemented by the `{EL_STORABLE_CHAIN}.extend' procedure.

**Read:** is implemented by the `{EL_STORABLE_CHAIN}.item' function.

**Update:** is implemented by the `{EL_STORABLE_CHAIN}.replace' procedure.

**Delete:** is implemented by the `{EL_STORABLE}.delete' procedure.

Transactional tables are implemented using the [./library/persistency/database/chain-db/el_recoverable_storable_chain.html `EL_RECOVERABLE_STORABLE_CHAIN'] class which inherits [./library/persistency/database/chain-db/el_storable_chain.html `EL_STORABLE_CHAIN']. It is called 'recoverable' because if the power suddenly goes off on your PC, the table is fully recoverable from the editions file. 

**ENCRYPTION**

AES encryption is supported for both monolithic and transactional tables.

**RELATIONAL CAPABILITIES**

Some experimental relational capabilities have been added in a private project but these classes have not yet found their way into Eiffel-Loop.

**EXAMPLES**
For an example of `EL_STORABLE_CHAIN' see class [./library/text/i18n/support/el_translation_items_list.html `EL_TRANSLATION_ITEMS_LIST'] found in the `i18n.ecf' localization library. Unfortunately the only examples for `EL_RECOVERABLE_STORABLE_CHAIN' are in a closed commercial project, but the usage is pretty similar.
