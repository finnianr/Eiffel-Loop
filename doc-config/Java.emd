A high-level framework for wrapping Java classes that adds a useful layer of abstraction to Eiffel Software's 
interface to the JNI ([https://en.wikipedia.org/wiki/Java_Native_Interface Java Native Interface]) called
[https://www.eiffel.org/doc/solutions/Eiffel2Java eiffel2java].

**Features**
* Better Java environment discovery for initialization.
* Automates composition of JNI call signature strings.
* Automates cleanup of Java objects.

The framework is based on the concept of a Java agent that is similar to an Eiffel agent. You will find classes:
[$source `JAVA_FUNCTION'] and 
[$source `JAVA_PROCEDURE'] that inherit
[$source `JAVA_ROUTINE'].
These agent classes automatically generate correct JNI call signatures. The library allows the creation
of recursively wrapped classes where the arguments and return types to wrapped routines are themselves
wrapped classes.

[./example/eiffel2java/source/class-index.html See here] for an example of it's use.
