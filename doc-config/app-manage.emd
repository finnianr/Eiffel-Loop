**Introduction**
This library accomplishes two goals:

**1.** Manage a collection of small (and possibility related) "mini-applications" as a single Eiffel
application.

**2.** Implement the concept of a self-installing/uninstalling application on multiple-platforms.

**"Swiss-army-knife applications"**
Creating a new project application in Eiffel is expensive both in terms of time to create a new ECF and
project directory structure, and in terms of diskspace. If all you want to do is create a small utility
to do some relatively minor task, it makes sense to include it with a other such utilities in a single
application. But you need some framework to manage all these sub-applications. In this package, the two
classes [./library/runtime/app-manage/el_multi_application_root.html `EL_MULTI_APPLICATION_ROOT'] and
[./library/runtime/app-manage/sub-app/el_sub_application.html `EL_SUB_APPLICATION'] provide this capability.

**Command line sub-applications**
The following features exist for creating command line applications:

* The class [./library/runtime/app-manage/sub-app/el_command_line_sub_application.html `EL_COMMAND_LINE_SUB_APPLICATION']
provides a smart way of mapping command line arguments to the arguments of a creation procedure with automatic string
conversion according to type.
* Built-in help system with usage help.
* Create menu driven command line shells.

**Installer Features**
* Define system menu entries and desktop shortcuts for both Windows and the Linux XDG desktop entry standard.
* Define application sub menus
* Define application menu launchers
* Define launcher as file context Nautilus action script. (A similar feature for Windows not yet implemented)
* Define dekstop menu icons
* Install application resources and program files
* Uninstall application resources and program files

**Resource Management**
The library provides a system of managing application resources like graphics, help files etc.

