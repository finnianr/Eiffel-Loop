pyxis-doc:
	version = 1.0; encoding = "ISO-8859-1"

# Pyxis is data format inspired by the Python programming language and designed to be a more
# readable supplement/substitute for XML configuration files.

# Pyxis as an acronym stands for: Pythonic XML ideal source.
# It is also a Latin transliteration of a Greek word for a type of pottery used by women to hold 
# cosmetics, trinkets or jewellery. 

# The following is project configuration data for an Eiffel programming language project
# compiled with the EiffelStudio IDE

# This project contains a parser for the Pyxis format and a Pyxis to XML convertion utility

system:
	configuration_ns = "1-16-0"
	name = el_graphical; uuid = "229b7a2e-09aa-11df-87cb-6f5c8d784696"

	description:
		"""
			Vision-2 Extensions Demo

			Test applications for selected components from Eiffel-Loop extension libraries for Vision-2
			graphics and panel docking libraries.

			* [./library/vision2-x.pango_cairo.html Pango-Cairo 2D Graphics]
			* [./library/vision2-x.graphics.html Vision2-X 2D Graphics]
			* [./library/vision2-x.pixmap.html Vision2-X Pixmap Extensions]
			* [./library/vision2-x.container.html Vision2-X UI Container Extensions]
			* [./library/vision2-x.extensions.html Vision2-X UI Extensions]
			* [./library/vision2-x.widget.html Vision2-X UI Widget Extensions]
		"""
	
	# classic means C code as an intermediate language
	target: 
		name = classic

		root:
			class = APPLICATION_ROOT; feature = make
		version:
			major = 1; minor = 0; release = 0; build = 48
			company = "Eiffel-Loop"; product = "graphical"
			copyright = "Finnian Reilly"

		option:
			syntax = standard; full_class_checking = false; void_safety = none
			trace = false; debug = false; warning = true
			assertions:
				precondition = true; postcondition = true; check = false; invariant = false
			debugging:
				__unnamed_debug__ = disabled
				dlg_dispatcher = disabled; refactor_fixme = disabled
				vision2_windows = disabled; vision2_windows_gdi = disabled
				wel = disabled; wel_gdi_count = disabled; wel_gdi_references = disabled
				win_dispatcher = disabled
			warnings:
				export_class_missing = disabled; old_verbatim_strings = disabled
				syntax = disabled; vjrv = disabled

		settings:
			address_expression = false; array_optimization = false
			check_vape = true; console_application = true
			dead_code_removal = true; dynamic_runtime = false
			exception_trace = false
			inlining = false
			line_generation = false
			concurrency = thread

		precompile:
			precompile = "$ISE_PRECOMP/EL/GUI-application.ecf"

		libraries:
			location = "$ISE_LIBRARY/library"
			base = "base/base.ecf"
			thread = "thread/thread.ecf"
			time = "time/time.ecf"
		
		# Eiffel Loop overrides
		writeable_libraries:
			location = "$EIFFEL_LOOP/library/override"
			vision2 = "ES-vision2.ecf"
			option:
				assertions:
					precondition = true; postcondition = true; check = true

			docking = "ES-docking.ecf"
			option:
				assertions:
					precondition = true; postcondition = true; check = true
			web_browser = "ES-web_browser.ecf"

		# Eiffel Loop libraries
		writeable_libraries:
			location = "$EIFFEL_LOOP/library"
			EL_app_manage = "app-manage.ecf"
			EL_base = "base/base.ecf"
			EL_c_api = "C-language-interface.ecf"
			EL_doc_scan = "document-scan.ecf"
			EL_logging = "logging.ecf"
			EL_image_utils = "image-utils.ecf"
			EL_os_command = "os-command.ecf"
			EL_pyxis_scan = "pyxis-scan.ecf"
			EL_search ="search-engine.ecf"
			EL_thread = "thread.ecf"
			EL_vision2 = "vision2-x.ecf"
			EL_wel_x = "wel-x.ecf"
			condition:
				platform = windows
			EL_wel_regedit = "wel-regedit-x.ecf"
			condition:
				platform = windows
			EL_xml_scan = "xml-scan.ecf"

		cluster_tree:
			project = "source"
			platform_list:
				"imp_mswin; imp_unix"

