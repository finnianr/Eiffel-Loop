<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
	Pyxis is data format inspired by the Python programming language and designed to be a more
	readable supplement/substitute for XML configuration files.
-->
<system name = "el_concurrency" uuid = "DD11287A-8001-11EB-881D-8FE5DD797125" xmlns = "http://www.eiffel.com/developers/xml/configuration-1-16-0" xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation = "http://www.eiffel.com/developers/xml/configuration-1-16-0 http://www.eiffel.com/developers/xml/configuration-1-16-0.xsd">
	<description>
Concurrency Demonstration

Demonstration of classes that make the classic multi-threading ISE library `thread.ecf&apos; easier to use.

1. `el_concurrency -horse_race&apos; An [https://www.youtube.com/watch?v=s2-7pzmVjao animated version]
of the classic concurrency horse-racing exercise.
2. `el_concurrency -work_distributer&apos; demonstrates the calculation of integrals for arbitrary functions
distributed across a specified number of threads
	</description>
	<target name = "classic">
		<root class = "APPLICATION_ROOT" feature = "make"/>
		<version major = "1" minor = "0" release = "0" build = "0" company = "Eiffel-Loop" product = "Concurrency Demonstration" copyright = "Finnian Reilly"/>
		<option syntax = "standard" full_class_checking = "false" void_safety = "none">
			<assertions precondition = "true" postcondition = "true" check = "true"/>
		</option>
		<setting name = "address_expression" value = "false"/>
		<setting name = "array_optimization" value = "false"/>
		<setting name = "check_vape" value = "true"/>
		<setting name = "console_application" value = "true"/>
		<setting name = "dead_code_removal" value = "true"/>
		<setting name = "dynamic_runtime" value = "false"/>
		<setting name = "exception_trace" value = "true"/>
		<setting name = "line_generation" value = "false"/>
		<setting name = "inlining" value = "true"/>
		<setting name = "inlining_size" value = "2"/>
		<setting name = "concurrency" value = "thread"/>
		<precompile name = "precompile" location = "$ISE_PRECOMP/EL/console-application.ecf"/>
		<library name = "ise_base" location = "$ISE_LIBRARY/library/base/base.ecf">
			<option>
				<assertions precondition = "true" postcondition = "true" check = "true" invariant = "true"/>
			</option>
		</library>
		<library name = "ise_base_ext" location = "$ISE_LIBRARY/library/base_extension/base_extension.ecf"/>
		<library name = "ise_thread" location = "$ISE_LIBRARY/library/thread/thread.ecf"/>
		<library name = "ise_time" location = "$ISE_LIBRARY/library/time/time.ecf"/>
		<library name = "ise_net" location = "$ISE_LIBRARY/library/net/net.ecf"/>
		<!--Eiffel Loop libraries-->
		<library name = "EL_app_manage" location = "$EIFFEL_LOOP/library/app-manage.ecf" readonly = "false"/>
		<library name = "EL_base" location = "$EIFFEL_LOOP/library/base/base.ecf" readonly = "false">
			<option>
				<assertions precondition = "true" postcondition = "true" check = "true"/>
			</option>
		</library>
		<library name = "EL_logging" location = "$EIFFEL_LOOP/library/logging.ecf" readonly = "false"/>
		<library name = "EL_os_command" location = "$EIFFEL_LOOP/library/os-command.ecf" readonly = "false"/>
		<library name = "EL_thread" location = "$EIFFEL_LOOP/library/thread.ecf" readonly = "false"/>
		<cluster name = "project" location = "source" recursive = "true"/>
	</target>
</system>
