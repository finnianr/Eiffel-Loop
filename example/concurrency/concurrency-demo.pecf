pyxis-doc:
	version = 1.0; encoding = "ISO-8859-1"

# Pyxis is data format inspired by the Python programming language and designed to be a more
# readable supplement/substitute for XML configuration files.

system:
	configuration_ns = "1-16-0"; uuid = "DD11287A-8001-11EB-881D-8FE5DD797125"
	name = el_concurrency
	description:
		"""
			Concurrency Demonstration

			Demonstration of classes that make the classic multi-threading ISE library `thread.ecf' easier to use.

			1. `el_concurrency -horse_race' An [https://www.youtube.com/watch?v=s2-7pzmVjao animated version]
			of the classic concurrency horse-racing exercise.
			2. `el_concurrency -work_distributer' demonstrates the calculation of integrals for arbitrary functions
			distributed across a specified number of threads
		"""
	target: 
		name = classic
		root:
			class = APPLICATION_ROOT; feature = make
		version:
			major = 1; minor = 0; release = 0; build = 0
			company = "Eiffel-Loop"; product = "Concurrency Demonstration"
			copyright = "Finnian Reilly"

		option:
			syntax = standard; full_class_checking = false; void_safety = none
			assertions:
				precondition = true; postcondition = true; check = true

		settings:
			address_expression = false; array_optimization = false
			check_vape = true; console_application = true
			dead_code_removal = true; dynamic_runtime = false
			exception_trace = true
			line_generation = false; inlining = true; inlining_size = 2
			concurrency = thread

		precompile:
			precompile = "$ISE_PRECOMP/EL/console-application.ecf"

		libraries:
			location = "$ISE_LIBRARY/library"
			ise_base = "base/base.ecf"
			option:
				assertions:
					precondition = true; postcondition = true; check = true; invariant = true
			ise_base_ext = "base_extension/base_extension.ecf"
			ise_thread = "thread/thread.ecf"
			ise_time = "time/time.ecf"
			ise_net = "net/net.ecf"

		# Eiffel Loop libraries
		writeable_libraries:
			location = "$EIFFEL_LOOP/library"
			EL_app_manage = "app-manage.ecf"
			EL_base = "base/base.ecf"
			option:
				assertions:
					precondition = true; postcondition = true; check = true
			EL_logging = "logging.ecf"
			EL_os_command = "os-command.ecf"
			EL_thread = "thread.ecf"

		cluster_tree:
			project = source

